import { Loader, useProgress } from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import { useQuery } from "@tanstack/react-query";
import { Leva } from "leva";
import Head from "next/head";
import { useEffect, useState } from "react";
import { getCollection } from "../api/getCollection";
import { getPicture } from "../api/getPicture";
import Modal from "../components/Modal";
import Scene from "../components/Scene";
import SideModal from "../components/SideModal";
import { useAppStore } from "../contexts/appState";

export default function Home() {
  const setPictures = useAppStore((state) => state.setPictures);
  const [debug, setDebug] = useState(false);

  const debugHandler = (e) => {
    window.addEventListener("keydown", (e) => {
      if (e.key === "d") {
        setDebug((d) => !d);
      }
    });
  };

  useEffect(() => {
    window.addEventListener("keydown", debugHandler);
    return () => {
      window.removeEventListener("keydown", debugHandler);
    };
  });

  const { isLoading, isError, data, error, isSuccess } = useQuery({
    queryKey: ["collection"],
    queryFn: getCollection,
  });

  const { isLoading: loadingPics, data: pics } = useQuery({
    queryKey: ["pictures"],
    queryFn: () => {
      const all = data.map((picture) => getPicture(picture.id));
      return Promise.all(all);
    },
    onSuccess: (data) => {
      console.log(data);
      setPictures(data);
    },
    enabled: isSuccess,
  });

  return (
    <div>
      <Head>
        <title>Pictures from my camera</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-[100vw] h-[100vh] overflow-hidden">
        <Modal />
        <SideModal />
        <h1 className="font-extrabold text-4xl ml-2 title absolute z-50 top-[-5vh] opacity-0">
          pictures from my camera
          <p className="text-base">a three js experiment</p>
          <p className="text-base">made by yoan saint juste</p>
        </h1>
        <p className="clickOnCamera absolute z-50 bottom-3 text-center w-full opacity-0">
          {isLoading || loadingPics
            ? "- loading some cool pictures -"
            : "- click on the camera -"}
        </p>
        <Canvas camera={{ position: [80, 62, 77] }}>
          <Scene />
        </Canvas>
        <Leva hidden={debug === false} />
      </main>
    </div>
  );
}
